EXPERIMENT 1
This experiment demonstrates a basic ability to use synapse plasticity to learn to 
classify ("recognise") 10 digits taken from the standard MNIST dataset.

The data is supplied as a PyNN spike source file comprising a rate-coding of the response of a set of 50 virtual receptor ("VR") points
placed in the feature space of the dataset. The VR points are generated by self-organised mapping of the input data using 
the "neural gas" algorithm [1].

To run the demonstration 
1. Open the Settings file and set a cache directory on your filesystem.
This is where the synapse weights are saved after the learning stage and comprises up to 400 files. 
It is therefore recommended to place this in a local tmp directory and avoid any location linked to a repository or cloud (e.g. Dropbox).

2. Run the Training/Learning. 
cd to the experiment directory and enter "python BuildAndRunClassifier.py True"
This builds the classifier model using plastic synapses and presents a sequence of 10 example MNIST digits (0 to 9) by loading the 
spike sources representing the rate coded VR reponses and also a teaching signal that will create spiking activity in the
relevant output population (e.g. pop_Class1 , pop_Class2 etc).
Each digit is presented for 200ms.
If all works then a raster plot should eventually display and will save a PNG copy also in the current directory.
For an understanding of the raster plot it is recommended to refer to [2,3] on which this neural model is based.
The final synapse weights generated by the plasticity are saved off inot filesin the cache directory.

3. Run the Testing
cd to the experiment directory and enter "python BuildAndRunClassifier.py False"
This builds the classifier model using fixed weight synapses loaded from the files saved and presents the same sequence of digits. 
No teaching signal is provided in this case.
Spiking activity in the output populations is then counted to determine the most active - indicating the classifier's "opinion".
Again, if all works then a raster plot should eventually display and will save a PNG copy also in the current directory.
It can be clearly seen from the raster plot that the same ouputs are reactivated, achieving a score of 10/10 accuracy.

REFERENCES
[1] T. Martinetz and K. Schulten, “A ‘Neural-Gas’ Network Learns
Topologies,” Artif. Neural Networks, vol. 1, pp. 397–402, 1991.

